# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.4.1-node-browsers

    working_directory: /tmp/client

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            JEKYLL_ENV=production bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # run tests!
      - run:
          name: run tests
          command: |
            JEKYLL_ENV=production bundle exec jekyll doctor

      - run:
          name: html proof
          command: JEKYLL_ENV=production bundle exec htmlproofer ./_site --check-html --disable-external || true

      - run:
          name: run build
          command: |
            JEKYLL_ENV=production bundle exec jekyll build

      - run:
          name: take snapshots
          command: |
            JEKYLL_ENV=production percy snapshot _site/

      - save_cache:
          paths:
            - _site
          key: build-{{ .Revision }}

  deploy-master:
    docker:
      - image: circleci/node:8-browsers
    working_directory: /tmp/client
    steps:
      - restore_cache:
          keys:
          - build-{{ .Revision }}
      - run:
          name: install aws
          command: |
            sudo apt-get install python-dev python-pip
            sudo pip install awscli
      - run:
          name: Deploy to S3 if tests pass and branch is Master
          command: aws s3 sync _site s3://docs.decentraland.org/ --acl public-read
      - run:
          name: Invalidate cloudfront cache
          command: aws configure set preview.cloudfront true && aws configure set preview.create-invalidation true && aws cloudfront create-invalidation --distribution-id EJBULXL599QEP --paths "/*"
workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - hold:
          type: approval
          requires:
           - build
          filters:
            branches:
              only: master
      - deploy-master:
          requires:
            - hold
          filters:
            branches:
              only: master
