# stages:
#   - build
#   # - test
#   - deploy

# services:
#   - docker:dind

# # Cache modules in between jobs
# cache:
#   # key: ${CI_COMMIT_REF_SLUG}
#   key: ${CI_COMMIT_REF_NAME}
#   paths:
#     - vendor/
#     - _site/
#     - .jekyll-cache
#     - .jekyll-metadata

# deploy-preview:
#   stage: deploy
#   image: decentraland/ci-jekyll:3
#   variables:
#     SOURCE_PATH: "$CI_COMMIT_REF_NAME"
#     SITE_TARGET_URL: "https://docs.decentraland.io/branch/$CI_COMMIT_REF_NAME"
#     GITHUB_REPOSITORY: decentraland/documentation
#     GITHUB_SHA: $CI_COMMIT_SHA
#   except:
#     - master
#   before_script:
#     - cd .ci && npm ci
#     - >
#       npm run status -- \
#         --state pending \
#         --description "Deploying..." \
#         --target-url "$CI_JOB_URL"
#     - cd ..
#   after_script:
#     - cd .ci && npm ci
#     - >
#       if [ "$CI_JOB_STATUS" == "success" ]; then
#         npm run status -- \
#           --state success \
#           --description "Deployed!!!" \
#           --target-url "$CI_JOB_URL"
#       else
#         npm run status -- \
#           --state failure \
#           --target-url "$CI_JOB_URL"
#       fi
#   script:
#     # BUILD
#     - gem install bundler
#     - bundle config set path 'vendor/bundle'
#     - bundle install --jobs=4 --retry=3
#     - CI_COMMIT_REF_NAME=master
#     - source dcl-env
#     - 'echo "" > _data/environment.yml'
#     - 'echo "ENVIRONMENT: \"$ENVIRONMENT\"" >> _data/environment.yml'
#     - 'echo "CI_COMMIT_SHA: \"$CI_COMMIT_SHA\"" >> _data/environment.yml'
#     - 'echo "CI_COMMIT_SHORT_SHA: \"$CI_COMMIT_SHORT_SHA\"" >> _data/environment.yml'
#     - 'echo "CI_COMMIT_REF_NAME: \"$CI_COMMIT_REF_NAME\"" >> _data/environment.yml'
#     - 'echo "CI_COMMIT_BRANCH: \"$CI_COMMIT_BRANCH\"" >> _data/environment.yml'
#     - 'echo "CI_COMMIT_TAG: \"$CI_COMMIT_TAG\"" >> _data/environment.yml'
#     - >
#       JEKYLL_ENV=production bundle exec jekyll build \
#         --incremental \
#         --destination "_site/branch/$SOURCE_PATH" \
#         --baseurl "/branch/$SOURCE_PATH"

#     # DEPLOY (.io)
#     - dcl-lock-sync
#     - cd .ci && npm ci && dcl-up websites-documentation
#     - dcl-sync-release
#     - PATH="$PATH:$HOME/.pulumi/bin"
#     - SOURCE="_site/branch/$SOURCE_PATH"
#     - TARGET="s3://$(pulumi stack output bucketName)/branch/$SOURCE_PATH"
#     - EXPIRES="$(date --date='7 day' '+%Y-%m-%dT00:00:00Z')"
#     - echo "aws s3 sync $SOURCE $TARGET --expires $EXPIRES"
#     - cd .. && aws s3 sync $SOURCE $TARGET --expires $EXPIRES --acl public-read
#     - cd .ci && dcl-cache-invalidation
#     - >
#       npm run status -- \
#         --state success \
#         --name "live" \
#         --description "Site is live!" \
#         --target-url "$SITE_TARGET_URL"

# deploy:
#   stage: deploy
#   image: decentraland/ci-jekyll:3
#   variables:
#     GITHUB_REPOSITORY: decentraland/documentation
#     GITHUB_SHA: $CI_COMMIT_SHA
#   only:
#     - master
#   before_script:
#     - cd .ci && npm ci
#     - >
#       npm run status -- \
#         --state pending \
#         --description "Deploying..." \
#         --target-url "$CI_JOB_URL"
#     - cd ..
#   after_script:
#     - cd .ci && npm ci
#     - >
#       if [ "$CI_JOB_STATUS" == "success" ]; then
#         npm run status -- \
#           --state success \
#           --description "Deployed!!!" \
#           --target-url "$CI_JOB_URL"
#       else
#         npm run status -- \
#           --state failure \
#           --target-url "$CI_JOB_URL"
#       fi
#   script:
#     # BUILD
#     - gem install bundler
#     - bundle config set path 'vendor/bundle'
#     - bundle install --jobs=4 --retry=3
#     - CI_COMMIT_REF_NAME=release
#     - source dcl-env
#     - 'echo "" > _data/environment.yml'
#     - 'echo "ENVIRONMENT: \"$ENVIRONMENT\"" >> _data/environment.yml'
#     - 'echo "CI_COMMIT_SHA: \"$CI_COMMIT_SHA\"" >> _data/environment.yml'
#     - 'echo "CI_COMMIT_SHORT_SHA: \"$CI_COMMIT_SHORT_SHA\"" >> _data/environment.yml'
#     - 'echo "CI_COMMIT_REF_NAME: \"$CI_COMMIT_REF_NAME\"" >> _data/environment.yml'
#     - 'echo "CI_COMMIT_BRANCH: \"$CI_COMMIT_BRANCH\"" >> _data/environment.yml'
#     - 'echo "CI_COMMIT_TAG: \"$CI_COMMIT_TAG\"" >> _data/environment.yml'
#     - JEKYLL_ENV=production bundle exec jekyll build --incremental --destination _site

#     # DEPLOY (.org)
#     - dcl-lock-sync
#     - cd .ci && npm install && dcl-up websites-documentation
#     - dcl-sync-release && cd ..
#     - dcl-upload _site
#     - cd .ci && dcl-cache-invalidation
#     - >
#       npm run status -- \
#         --state success \
#         --name "live" \
#         --description "Site is live!" \
#         --target-url "https://docs.decentraland.org/"
